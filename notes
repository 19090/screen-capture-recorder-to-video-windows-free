streaming to TV:
 wired might work better... :P

I just ran a quick test: a 90 second 720x480 23.976 fps MPEG video compressed in 7 seconds with Divx 
at its fastest settings. Xvid took 17 seconds. HuffYUV took 9 seconds. 
PicVideo MJPEG (v 2.0) 7 seconds. This was on a Q6600 CPU.

maybe I should bounty camstudio codec compressor too?


x264 speeds:
All the encoding settings were tested on a 720x448 @30000/1001 fps video sample, the target bitrate was 900kbps, and the machine was an AMD-64 3400+ at 2400 MHz in 64 bits mode. Each encoding setting features the measured encoding speed (in frames per second) and the PSNR loss (in dB) compared to the "very high quality" setting. Please understand that depending on your source, your machine type and development advancements, you may get very different results.

Description Encoding options	speed (in fps)	Relative PSNR loss (in dB)
Very high quality	subq=6:partitions=all:8x8dct:me=umh:frameref=5:bframes=3:b_pyramid:weight_b	6fps	0dB
High quality	subq=5:8x8dct:frameref=2:bframes=3:b_pyramid:weight_b	13fps	-0.89dB
Fast	subq=4:bframes=2:b_pyramid:weight_b	17fps	-1.48dB

maybe should bounty fraps encoder

The most balanced and flexible codec is FFV1: relatively good speed and high compression for various presets."

flv?

MPEG-2 and Windows Media are great for real time recording even on slow computers.
webm?

1) wmv9 cant beat even xvid clearly on 1cd backup bitrates, so it has no chance against a good h.264 implementation, like x264 or ateme
  wmv9 has poorer quality I guess...might be fast still, but...hmm...

x264 plugin for video over shoutcast also shows that h264 is better in streaming quality

http://forum.videolan.org/viewtopic.php?f=4&t=60947
  some guy streaming something something 

there may be no mencoder rtsp [?]

vp8?

shoutcast, icecast, or streamcast or darwin?

sopcast
  is out

also should I do a TODO for "enable uPnP locally so you can give out real IP addresses?" for local streaming?

red5 looks strong.

http live streaming looks quite suh-weet...not sure how to actually upload the thing in realtime, though...scp I guess is the only way...

ffmpeg can stream to rtp (and uh guess to ffserver to...)
 If what you want is send the file little by little, so someone can connect to the stream after you start the stream, you can try this command
  ffmpeg -i conference.mp3 -acodec copy -f rtp rtp://239.8.8.8:5000  -re
  With -re you read the input at native frame rate, so you will be sending it as long as the file duration.

gstreamer rtsp + DSS/linux got good reviews...hmm...https://www.ridgerun.com/developer/wiki/index.php/Using_GStreamer_with_Darwin_Streaming_Server_as_RTSP_server

make it like ustream?  is ustream free? 

quicktime broadcaster supports isight, DV video, normal audio mic [!], camtwist which has a desktop capture...hmm... 

  suggested ustream live codec/width: http://www.livestream.com/userguide/?title=Stream_With_Quicktime_Broadcaster#Suggested_Video_Settins

This is non-trivial...
you might be able to come up with some freaky way of doing things, like this gets video, that audio, this combines the two into rtsp [yikes].

Also note that it seems from QT broadcaster that you just do keyframes every so often and...umm...lose realtime aspect
but what are you going to do?

encoding should probably "best" be done on the capture recorder side...

camtwist would work for desktop qtcapture device...not open source though :P but free, and probably rocks! sweet!
  don't know how I would distribute for mac...or if it would even be helpful LOL.

== propaganda ==


  mehs:
  screenshot capture 800K meh
  screenshot screen capture 800K meh
  capture software 450K meh
  screen grab 450K meh
  free screen 1.2M meh
  capture screenshots 1.6M meh
  capture software 450K meh

  windows screen capture 110,000
  window screen capture 135,000
  screen capture directshow 590
  screen capture vlc 5,400
  screen capture device 1,300
  desktop capture 40K
  desktop stream 18K
  record desktop 90K

  free screen capture 135K
  record screen capture 135K
  screencast 135K
  capture streaming video 135K meh
  windows screen capture 110K meh too low
  screen capturing 110K
  record streaming video 110K
  screen capture record 135K
  software/program 135K
  
  video screen capture 160K
  free recording software 165K # software is just plain too tacky...
  record screen 300K
  screen recorder 450K
  screen capture 550K
  screen recording 380K
  windows capture 240K
  camstudio 240K  
  
  recorder screen 450K
  record screen 300K
  screen capture recorder 246K
  
  capture screen 1.8M
  on screen capture 1.8M

  sum:
  
  on-screen-capture-recorder-to-video-windows-free
  
    was screen capture recorder program
  
notes:
 1024x1024:
   15% one cpu used by the capture utility (0.013ms per capture)
   good for now I guess (no transparency visible...)
   12 fps <sigh>

VBLE in my anime encoding .... the normal size for my huffyuv avi for the show was 5-6 gigs and with vble i got 4.4 gig
  appears abandoned

1680x1050 was 20 MB/s huffyuv

utvideo is the "best" lossless they say...http://www.videohelp.com/tools/Ut_Video_Codec_Suite
  or is that just for playback though?
  
MSU lossless codec is abandoned and not developed nor supported anymore. It was never even close to realtime
  except it appears to be hmm...
Xvid with search options at 0, no B frames, and constant quality 1 or 2 is very fast, even with one core. You can specify it use just intra (I) frames, but it wouldn't be slow decoding with P-frames.
imho, Fastest visually lossless codec is Cineform wavelet :) [not free]
   Cineform isn't in this test. It's not cheap, but it DOES let you capture 10 bit 4:2:2 1080p24 in real time to a single drive
ArithYUV 
YLC (YUY2 Lossless Codec version 0.25

http://www.compression.ru/video/codec_comparison/lossless_codecs_2007_en.html
  FFV1 max and fast seems like the next best "lossless" options.
  
TODO try out camstudio lossless too what size is it?
  does it have a lossy option?  If so how does that compare to all other lossy options ffmpeg has? oh well LOL

Lagarith clearly beats relatively fast codecs both by compression ratio and fps. http://compression.ru/video/codec_comparison/pdf/msu_lossless_codecs_comparison_2007_eng.pdf

HUFFYUV did 34fps
Uncompressed did 24fps
Aware Wavelet did 48fps

CorePNG

teeny window, 10 fps blacky:
  doDIBits 38% cpu
  memcpy 5%
  
 big window, 10 fps
   ffmpeg main 20%
   
   61 % diBits
   14 % memcpy